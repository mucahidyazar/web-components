{"version":3,"sources":["../../src/icon.js"],"names":["fallbackIcon","path","viewBox","Icon","props","ref","element","as","color","focusable","children","className","__css","rest","_className","styles","w","h","display","lineHeight","flexShrink","shared","_viewBox","_path","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,eACF;AAAG,IAAA,MAAM,EAAC,cAAV;AAAyB,IAAA,WAAW,EAAC;AAArC,kBACE;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,CAAC,EAAC;AAHJ,IADF,eAME;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,aAAa,EAAC,OAFhB;AAGE,IAAA,CAAC,EAAC;AAHJ,IANF,eAWE;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,gBAAgB,EAAC,IAArC;AAA0C,IAAA,EAAE,EAAC,IAA7C;AAAkD,IAAA,EAAE,EAAC,IAArD;AAA0D,IAAA,CAAC,EAAC;AAA5D,IAXF,CAFiB;AAgBnBC,EAAAA,OAAO,EAAE;AAhBU,CAArB;AAmBO,IAAMC,IAAI,gBAAG,uBAAW,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7C,MACMC,OADN,GASIF,KATJ,CACEG,EADF;AAAA,MAEEL,OAFF,GASIE,KATJ,CAEEF,OAFF;AAAA,qBASIE,KATJ,CAGEI,KAHF;AAAA,MAGEA,KAHF,6BAGU,cAHV;AAAA,yBASIJ,KATJ,CAIEK,SAJF;AAAA,MAIEA,SAJF,iCAIc,KAJd;AAAA,MAKEC,QALF,GASIN,KATJ,CAKEM,QALF;AAAA,MAMEC,SANF,GASIP,KATJ,CAMEO,SANF;AAAA,MAOEC,KAPF,GASIR,KATJ,CAOEQ,KAPF;AAAA,MAQKC,IARL,iCASIT,KATJ;;AAWA,MAAMU,UAAU,GAAG,cAAG,aAAH,EAAkBH,SAAlB,CAAnB;;AAEA,MAAMI,MAAM;AACVC,IAAAA,CAAC,EAAE,KADO;AAEVC,IAAAA,CAAC,EAAE,KAFO;AAGVC,IAAAA,OAAO,EAAE,cAHC;AAIVC,IAAAA,UAAU,EAAE,KAJF;AAKVC,IAAAA,UAAU,EAAE,CALF;AAMVZ,IAAAA,KAAK,EAALA;AANU,KAOPI,KAPO,CAAZ;;AAUA,MAAMS,MAAM,GAAG;AACbhB,IAAAA,GAAG,EAAHA,GADa;AAEbI,IAAAA,SAAS,EAATA,SAFa;AAGbE,IAAAA,SAAS,EAAEG,UAHE;AAIbF,IAAAA,KAAK,EAAEG;AAJM,GAAf;;AAOA,MAAMO,QAAQ,GAAGpB,OAAH,WAAGA,OAAH,GAAcF,YAAY,CAACE,OAAzC;AAEA;AACF;AACA;AACA;;;AACE,MAAII,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAlC,EAA4C;AAC1C,wBAAO;AAAK,MAAA,EAAE,EAAEA;AAAT,OAAsBe,MAAtB,EAAkCR,IAAlC,EAAP;AACD;;AAED,MAAMU,KAAK,GAAGb,QAAH,WAAGA,QAAH,GAAeV,YAAY,CAACC,IAAvC;;AAEA,sBACE;AAAK,IAAA,aAAa,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEqB;AAArC,KAAmDD,MAAnD,EAA+DR,IAA/D,GACGU,KADH,CADF;AAKD,CAhDmB,CAAb;;;AAkDP,IAAIC,aAAJ,EAAa;AACXrB,EAAAA,IAAI,CAACsB,WAAL,GAAmB,MAAnB;AACD;;eAEctB,I","sourcesContent":["import { forwardRef } from \"react\";\r\nimport { cx, __DEV__ } from \"@mucahidyazar/util\";\r\n\r\nconst fallbackIcon = {\r\n  path: (\r\n    <g stroke=\"currentColor\" strokeWidth=\"1.5\">\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        fill=\"none\"\r\n        d=\"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\r\n      />\r\n      <path\r\n        fill=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        d=\"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\r\n      />\r\n      <circle fill=\"none\" strokeMiterlimit=\"10\" cx=\"12\" cy=\"12\" r=\"11.25\" />\r\n    </g>\r\n  ),\r\n  viewBox: \"0 0 24 24\",\r\n};\r\n\r\nexport const Icon = forwardRef((props, ref) => {\r\n  const {\r\n    as: element,\r\n    viewBox,\r\n    color = \"currentColor\",\r\n    focusable = false,\r\n    children,\r\n    className,\r\n    __css,\r\n    ...rest\r\n  } = props;\r\n\r\n  const _className = cx(\"chakra-icon\", className);\r\n\r\n  const styles = {\r\n    w: \"1em\",\r\n    h: \"1em\",\r\n    display: \"inline-block\",\r\n    lineHeight: \"1em\",\r\n    flexShrink: 0,\r\n    color,\r\n    ...__css,\r\n  };\r\n\r\n  const shared = {\r\n    ref,\r\n    focusable,\r\n    className: _className,\r\n    __css: styles,\r\n  };\r\n\r\n  const _viewBox = viewBox ?? fallbackIcon.viewBox;\r\n\r\n  /**\r\n   * If you're using an icon library like `react-icons`.\r\n   * Note: anyone passing the `as` prop, should manage the `viewBox` from the external component\r\n   */\r\n  if (element && typeof element !== \"string\") {\r\n    return <svg as={element} {...shared} {...rest} />;\r\n  }\r\n\r\n  const _path = children ?? fallbackIcon.path;\r\n\r\n  return (\r\n    <svg verticalAlign=\"middle\" viewBox={_viewBox} {...shared} {...rest}>\r\n      {_path}\r\n    </svg>\r\n  );\r\n});\r\n\r\nif (__DEV__) {\r\n  Icon.displayName = \"Icon\";\r\n}\r\n\r\nexport default Icon;\r\n"],"file":"icon.js"}